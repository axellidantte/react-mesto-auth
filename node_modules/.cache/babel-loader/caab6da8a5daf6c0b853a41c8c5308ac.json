{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport api from \"../utils/api.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false); // const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(result => {\n      setCurrentUser(result[0]);\n      setCards(result[1]);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  } // function handleAddPlaceClick() {\n  //     setIsAddPlacePopupOpen(true);\n  // }\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(resolve => {\n      setCards(() => cards.filter(c => c._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateUser(data) {\n    api.editUserInfo(data).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api.newAvatar(link).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  } // function handleAddPlaceSubmit(name, link) {\n  //     api\n  //         .addCard(name, link)\n  //         .then((newCard) => {\n  //             setCards([newCard, ...cards]);\n  //             closeAllPopups();\n  //         })\n  //         .catch((err) => console.log(err));\n  // }\n\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false); // setIsAddPlacePopupOpen(false);\n\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick,\n          handleCardLike: handleCardLike,\n          handleCardDelete: handleCardDelete,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard !== null && selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"AAwXRSfGe1X567HQjiylwuq8TFc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ekaterina/dev/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","api","CurrentUserContext","ImagePopup","EditProfilePopup","EditAvatarPopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","then","result","catch","err","console","log","handleEditProfileClick","handleEditAvatarClick","handleCardClick","card","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","resolve","filter","handleUpdateUser","data","editUserInfo","closeAllPopups","handleUpdateAvatar","link","newAvatar","handleAddPlaceClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport api from \"../utils/api.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    // const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then((result) => {\n                setCurrentUser(result[0]);\n                setCards(result[1]);\n            })\n            .catch((err) => console.log(err));\n    }, []);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n    // function handleAddPlaceClick() {\n    //     setIsAddPlacePopupOpen(true);\n    // }\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map(c => (c._id === card._id ? newCard : c)));\n        });\n    }\n\n    function handleCardDelete(card) {\n        api\n            .deleteCard(card._id)\n            .then((resolve) => {\n                setCards(() => cards.filter((c) => c._id !== card._id));\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateUser(data) {\n        api\n            .editUserInfo(data)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateAvatar(link) {\n        api\n            .newAvatar(link)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    // function handleAddPlaceSubmit(name, link) {\n    //     api\n    //         .addCard(name, link)\n    //         .then((newCard) => {\n    //             setCards([newCard, ...cards]);\n    //             closeAllPopups();\n    //         })\n    //         .catch((err) => console.log(err));\n    // }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        // setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(null);\n    }\n\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <>\n                <div className=\"page\">\n                    <Header />\n\n                    <Main\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        handleCardLike={handleCardLike}\n                        handleCardDelete={handleCardDelete}\n                        cards={cards}\n                    />\n\n                    <Footer />\n\n                </div>\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                {/* <PopupWithForm isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} name={\"add\"} title={\"Новое место\"} submitButtonText={\"Создать\"}>\n                    <input className=\"pop-up__input\" id=\"popup-add-title\" type=\"text\" name=\"place\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required />\n                    <span className=\"pop-up__error\" id=\"popup-add-title-error\"></span>\n                    <input className=\"pop-up__input\" id=\"popup-add-link\" type=\"url\" name=\"url\" placeholder=\"Ссылка на картинку\" required />\n                    <span className=\"pop-up__error\" id=\"popup-add-link-error\"></span>\n                </PopupWithForm> */}\n\n                <ImagePopup\n                    card={selectedCard !== null && selectedCard}\n                    onClose={closeAllPopups}\n                />\n            </>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}