{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setCurrentUser] = React.useState({});\n  React.useEffect(() => {\n    api.getUserInfo().then(userInfo => {\n      setCurrentUser(userInfo);\n    }).catch(err => console.log(err));\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  function handleUpdateUser(data) {\n    api.editUserInfo(data).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  function handleUpdateAvatar(link) {\n    api.newAvatar(link).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onEditAvatar: handleEditAvatarClick,\n          onCardClick: handleCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        name: \"add\",\n        title: \"Новое место\",\n        submitButtonText: \"Создать\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"pop-up__input\",\n          id: \"popup-add-title\",\n          type: \"text\",\n          name: \"place\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          minLength: \"2\",\n          maxLength: \"30\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pop-up__error\",\n          id: \"popup-add-title-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"pop-up__input\",\n          id: \"popup-add-link\",\n          type: \"url\",\n          name: \"url\",\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pop-up__error\",\n          id: \"popup-add-link-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard !== null && selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"2Db6nFOEIJLhpfPKNn3MHtiIhvw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ekaterina/dev/mesto-react/src/components/App.js"],"names":["React","useState","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","useEffect","getUserInfo","then","userInfo","catch","err","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","closeAllPopups","handleUpdateUser","data","editUserInfo","handleUpdateAvatar","link","newAvatar"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/api.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    React.useEffect(() => {\n        api\n            .getUserInfo()\n            .then((userInfo) => {\n                setCurrentUser(userInfo);\n            })\n            .catch((err) => console.log(err));\n    }, []);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(null);\n    }\n\n    function handleUpdateUser(data) {\n        api.editUserInfo(data)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleUpdateAvatar(link) {\n        api.newAvatar(link)\n          .then((data) => {\n          setCurrentUser(data);\n          closeAllPopups();\n          })\n          .catch((err) => console.log(err));\n      }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <>\n                <div className=\"page\">\n                    <Header />\n\n                    <Main\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                    />\n\n                    <Footer />\n\n                </div>\n\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n                <PopupWithForm isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} name={\"add\"} title={\"Новое место\"} submitButtonText={\"Создать\"}>\n                    <input className=\"pop-up__input\" id=\"popup-add-title\" type=\"text\" name=\"place\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required />\n                    <span className=\"pop-up__error\" id=\"popup-add-title-error\"></span>\n                    <input className=\"pop-up__input\" id=\"popup-add-link\" type=\"url\" name=\"url\" placeholder=\"Ссылка на картинку\" required />\n                    <span className=\"pop-up__error\" id=\"popup-add-link-error\"></span>\n                </PopupWithForm>\n\n\n                \n\n                <ImagePopup card={selectedCard !== null && selectedCard} onClose={closeAllPopups} />\n            </>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}