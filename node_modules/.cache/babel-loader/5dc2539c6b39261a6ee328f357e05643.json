{"ast":null,"code":"export class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  addCard(title, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: title,\n        link: link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  newAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: !isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  handleDeleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-24\",\n  headers: {\n    authorization: \"bcdeaa4a-1352-4fe5-8413-f3ec292b6c5c\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/ekaterina/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_getResponseData","res","ok","Promise","reject","status","json","getInitialCards","fetch","then","getUserInfo","addCard","title","link","method","body","JSON","stringify","name","editUserInfo","data","about","newAvatar","avatar","changeLikeCardStatus","cardId","isLiked","handleDeleteLike","deleteCard","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n\n      .then((res) => this._getResponseData(res));\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  addCard(title, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: title,\n        link: link\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  };\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  };\n\n  newAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link,\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: !isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers,\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  handleDeleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    })\n      .then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-24\",\n  headers: {\n    authorization: \"bcdeaa4a-1352-4fe5-8413-f3ec292b6c5c\",\n    \"Content-Type\": \"application/json\"\n  }\n})\n\nexport default api;"]},"metadata":{},"sourceType":"module"}