{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [cards, setCards] = React.useState([]);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(resolve => {\n      setCards(() => cards.filter(c => c._id !== card._id));\n    });\n  }\n\n  React.useEffect(() => {\n    api.getInitialCards().then(initialCards => {\n      setCards(initialCards);\n    }).catch(result => console.log(`${result} err`));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__avatar-edit-button\",\n        onClick: props.onEditAvatar,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__avatar\",\n          src: currentUser.Avatar,\n          alt: \"\\u0424\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info-left-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__info-name\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__title\",\n              children: currentUser.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"profile__edit-button\",\n              onClick: props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__subtitle\",\n            children: currentUser.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"profile__add-button\",\n          onClick: props.onAddPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"elements__cards\",\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: props.onCardClick,\n          onCardDelete: handleCardDelete,\n          onCardLike: handleCardLike\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"xialjJtjpodxuq9uLrhXqvEdCwA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/ekaterina/dev/mesto-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","currentUser","useContext","cards","setCards","useState","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","handleCardDelete","deleteCard","resolve","filter","useEffect","getInitialCards","initialCards","catch","result","console","log","onEditAvatar","Avatar","name","onEditProfile","about","onAddPlace","onCardClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    const [cards, setCards] = React.useState([]);\n\n    function handleCardLike(card) {\n\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then((resolve) => {\n            setCards(() => cards.filter((c) => c._id !== card._id));\n        })\n    }\n\n\n    React.useEffect(() => {\n        api\n            .getInitialCards()\n            .then((initialCards) => {\n                setCards(initialCards);\n            })\n            .catch((result) => console.log(`${result} err`));\n    }, []);\n\n    return (\n        <main className=\"main\">\n            <section className=\"profile\">\n                <button className=\"profile__avatar-edit-button\" onClick={props.onEditAvatar} >\n                    <img className=\"profile__avatar\" src={currentUser.Avatar} alt=\"Фото профиля\" />\n                </button>\n                <div className=\"profile__info\">\n                    <div className=\"profile__info-left-column\">\n                        <div className=\"profile__info-name\">\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\n                            <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__subtitle\">{currentUser.about}</p>\n                    </div>\n                    <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\n                </div>\n            </section>\n            <section className=\"elements\">\n                <div className=\"elements__cards\">\n                    {cards.map((card) => (\n                        <Card card={card} key={card._id} onCardClick={props.onCardClick} onCardDelete={handleCardDelete} onCardLike={handleCardLike} />\n                    ))}\n                </div>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}