{"ast":null,"code":"var _jsxFileName = \"/Users/ekaterina/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  onst[(name, setName)] = React.useState('');\n  const [description, setDescription] = React.useState(''); // Подписка на контекст\n\n  const currentUser = React.useContext(CurrentUserContext); // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    // Запрещаем браузеру переходить по адресу формы\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  function changeName(e) {\n    setName(e.target.value);\n  }\n\n  function changeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    name: \"edit\",\n    title: \"Редактировать профиль\",\n    submitText: \"Сохранить\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: changeName,\n      className: \"popup__input popup__input_type_name\",\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\",\n      placeholder: \"\\u0418\\u043C\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error\",\n      id: \"name-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: description,\n      onChange: changeDescription,\n      className: \"popup__input popup__input_type_about\",\n      type: \"text\",\n      id: \"about\",\n      name: \"about\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"200\",\n      placeholder: \"\\u041E \\u0421\\u0435\\u0431\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error\",\n      id: \"about-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"LnjJnYu0vPEGrK+yX76YifTAhbs=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/ekaterina/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","onst","name","setName","useState","description","setDescription","currentUser","useContext","useEffect","about","handleSubmit","e","preventDefault","onUpdateUser","changeName","target","value","changeDescription","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC7BC,EAAAA,IAAI,EAAEC,IAAI,EAAEC,OAAR,EAAJ,GAAuBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAvB;AACJ,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAtC,CAFiC,CAGjC;;AACA,QAAMG,WAAW,GAAGX,KAAK,CAACY,UAAN,CAAiBV,kBAAjB,CAApB,CAJiC,CAMjC;AACA;;AACAF,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpBN,IAAAA,OAAO,CAACI,WAAW,CAACL,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACC,WAAW,CAACG,KAAb,CAAd;AACD,GAHD,EAGG,CAACH,WAAD,CAHH;;AAKA,WAASI,YAAT,CAAsBC,CAAtB,EAAyB;AACvB;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFuB,CAIvB;;AACAb,IAAAA,KAAK,CAACc,YAAN,CAAmB;AACjBZ,MAAAA,IAAI,EAAEA,IADW;AAEjBQ,MAAAA,KAAK,EAAEL;AAFU,KAAnB;AAID;;AAED,WAASU,UAAT,CAAoBH,CAApB,EAAuB;AACrBT,IAAAA,OAAO,CAACS,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AACD;;AAED,WAASC,iBAAT,CAA2BN,CAA3B,EAA8B;AAC5BN,IAAAA,cAAc,CAACM,CAAC,CAACI,MAAF,CAASC,KAAV,CAAd;AACD;;AAEG,sBACI,QAAC,aAAD;AAAe,IAAA,MAAM,EAAEjB,KAAK,CAACmB,MAA7B;AAAqC,IAAA,OAAO,EAAEnB,KAAK,CAACoB,OAApD;AAA6D,IAAA,IAAI,EAAE,MAAnE;AAA2E,IAAA,KAAK,EAAE,uBAAlF;AAA2G,IAAA,UAAU,EAAE,WAAvH;AAAoI,IAAA,QAAQ,EAAET,YAA9I;AAAA,4BACI;AAAO,MAAA,KAAK,EAAET,IAAd;AAAoB,MAAA,QAAQ,EAAEa,UAA9B;AAA0C,MAAA,SAAS,EAAC,qCAApD;AAA0F,MAAA,IAAI,EAAC,MAA/F;AAAsG,MAAA,EAAE,EAAC,MAAzG;AAAgH,MAAA,IAAI,EAAC,MAArH;AAA4H,MAAA,QAAQ,MAApI;AAAqI,MAAA,SAAS,EAAC,GAA/I;AAAmJ,MAAA,SAAS,EAAC,IAA7J;AAAkK,MAAA,WAAW,EAAC;AAA9K;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAO,MAAA,KAAK,EAAEV,WAAd;AAA2B,MAAA,QAAQ,EAAEa,iBAArC;AAAwD,MAAA,SAAS,EAAC,sCAAlE;AAAyG,MAAA,IAAI,EAAC,MAA9G;AAAqH,MAAA,EAAE,EAAC,OAAxH;AAAgI,MAAA,IAAI,EAAC,OAArI;AAA6I,MAAA,QAAQ,MAArJ;AAAsJ,MAAA,SAAS,EAAC,GAAhK;AAAoK,MAAA,SAAS,EAAC,KAA9K;AAAoL,MAAA,WAAW,EAAC;AAAhM;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,EAAE,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAxCQnB,gB;;KAAAA,gB;AA0CT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n    onst [name, setName] = React.useState('');\nconst [description, setDescription] = React.useState('');\n// Подписка на контекст\nconst currentUser = React.useContext(CurrentUserContext);\n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(() => {\n  setName(currentUser.name);\n  setDescription(currentUser.about);\n}, [currentUser]);\n\nfunction handleSubmit(e) {\n  // Запрещаем браузеру переходить по адресу формы\n  e.preventDefault();\n\n  // Передаём значения управляемых компонентов во внешний обработчик\n  props.onUpdateUser({\n    name: name,\n    about: description,\n  });\n}\n\nfunction changeName(e) {\n  setName(e.target.value);\n}\n\nfunction changeDescription(e) {\n  setDescription(e.target.value);\n}\n\n    return (\n        <PopupWithForm isOpen={props.isOpen} onClose={props.onClose} name={\"edit\"} title={\"Редактировать профиль\"} submitText={\"Сохранить\"} onSubmit={handleSubmit}>\n            <input value={name} onChange={changeName} className=\"popup__input popup__input_type_name\" type=\"text\" id=\"name\" name=\"name\" required minLength=\"2\" maxLength=\"40\" placeholder=\"Имя\" />\n            <span className=\"popup__error\" id=\"name-error\"></span>\n            <input value={description} onChange={changeDescription} className=\"popup__input popup__input_type_about\" type=\"text\" id=\"about\" name=\"about\" required minLength=\"2\" maxLength=\"200\" placeholder=\"О Себе\" />\n            <span className=\"popup__error\" id=\"about-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}